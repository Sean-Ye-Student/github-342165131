rect_kys = ("fill", "weight", "pos", "size", "stroke")
fallback = lambda dic, ky, default: dic[ky] if dic != None else default
def RENDERRECT(object, enabled_keys):
    global objects
    re = object["rect"]
    f, w, p, s, st,  = map(None, (re[ky] if ky in enabled_keys else None for ky in rect_kys))
    strokeWeight(w if w != None else 1)
    fill(fallback(f, "r", 255), fallback(f, "g", 255), fallback(f, "b", 255), fallback(f, "a", 255)) 
    stroke(fallback(st, "r", 255), fallback(st, "g", 255), fallback(st, "b", 255), fallback(st, "a", 255))
    rect(fallback(p, "x", 0), fallback(p, "y", 0), fallback(s, "x", 0), fallback(s, "y", 0))


"rect" : {
	"fill" : {"r" : 255, "g" : 255, "b" : 255,"a" : 255},
	"stroke" :{"r" : 255, "g" : 255, "b" : 255, "a" : 255},
	"weight" : 1,
	"pos" : {"x" : 0, "y" : 0},
	"size" : {"x" : 10, "y" : 10}
	}
}